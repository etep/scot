#! /usr/bin/perl -w


#########################################################################
# fakePriToDual.pl
#########################################################################

# Written 6/5/2003 by Dinesh Patil 

# This script changes the primal solution file generated by mskexpopt to 
# dual file (with dummy dual multipliers) so that ggpsol can parse it
# in the same way as it parses the dgopt.sol file. For the conversion one 
# needs to give the #terms so that the dual multipliers can be faked.
#
#
# In case one runs mskexpopt with the -dual option (which is also the 
# default if no option is given), we get the dual variables. In this case
# this script just performs a format change (since we do not need to 
# fake the dual variables). So one can give any arbitrary value for #terms.
#
# The input file is the .sol file from mskexpopt and the outfile needed is also 
# specified.
# 
#########################################################################
# Load Libraries
#########################################################################
#None needed so far

# Check for proper number of arguments and extract args
if ($#ARGV != 2) { # $#ARGV is the number of command line arguments minus 1
    print STDERR "Usage: $0 mskexpopt_solfile  DualSolFile #terms\n"; # $0 is the script name
    print STDERR "EXAMPLE:  fakePriToDual.pl add32P1500USTT.sol dgopt.sol 13890\n";
    exit;
}
print "Running fakePriToDual.pl\n";
$prifile = shift(@ARGV);
$solfile = shift(@ARGV);
$numTer = shift(@ARGV);
$varPrefix = "c";
$termPrefix = "x";
$indexC = "          "; #10 character space
$nameC = "               "; #15 character space
$atC = "  "; #2 character space
$otherC = "               "; #15 character space..for all the values

open (IN,"<$prifile") ||  die  ("Can't open $prifile : $!\n");
open (OUT,">$solfile") ||  die  ("Can't open $solfile : $!\n");
print OUT "NAME                :\n";
$_ = <IN>;
print OUT $_;
$_ = <IN>;
print OUT $_;
print OUT  "OBJECTIVE NAME      : obj\n";
$_ = <IN>;
$_ =~ m/OBJECTIVE\s*:\s*([^\s]+)\s*/;
$obj = log($1);
print OUT "PRIMAL OBJECTIVE    : $obj\n";
print OUT "DUAL OBJECTIVE      : $obj\n";
$primal = 0;
$dual = 0;
$numPriVar = 0;
while(<IN>)
{
	if(/PRIMAL VARIABLES/)
	{
			 print OUT "CONSTRAINTS\n";
			 $primal = 1;
			 next;
	}
	if(/INDEX/)
	{
			 $index = $indexC;
			 $index =~ s/\s{5}(\s*)/INDEX$1/;
			 $name = $nameC;
			 $name =~ s/\s{4}(\s*)/NAME$1/;
			 $at = $atC;
			 $at =~ s/\s{2}(\s*)/AT$1/;
			 $activity = $otherC;
			 $activity =~ s/\s{8}(\s*)/ACTIVITY$1/;
			 $lowerlim = $otherC;
			 $lowerlim =~ s/\s{11}(\s*)/LOWER LIMIT$1/;
			 $upperlim = $otherC;
			 $upperlim =~ s/\s{11}(\s*)/UPPER LIMIT$1/;
			 $duallow = $otherC;
			 $duallow =~ s/\s{10}(\s*)/DUAL LOWER$1/;
			 $dualup = $otherC;
			 $dualup =~ s/\s{10}(\s*)/DUAL UPPER$1/;
			 print OUT "$index $name $at $activity $lowerlim $upperlim $duallow $dualup\n";
			 next;
	}
	if(/^\s*$/ and $primal == 1)
	{
			 $primal = 0;
			 $numPriVar ++;
			 $index = $indexC;
			 $len = length($numPriVar);
			 $index =~ s/\s{$len}(\s*)/$numPriVar$1/;
			 $name = $nameC;
			 $len = $len + length($varPrefix);
			 $name =~ s/\s{$len}(\s*)/$varPrefix$numPriVar$1/;
			 $at = $atC;
			 $at =~ s/\s{2}(\s*)/EQ$1/;
			 $other = $otherC;
			 $other =~ s/\s{13}(\s*)/0.0000000e+00$1/;
			 print OUT "$index $name $at $other $other $other $other $other\n"; 
			 print OUT $_;
			 next;
	}
	if($primal == 1)
	{
			 $_ =~ m/([^\s]+)\s+([^\s]+)\s*/;
			 $numPriVar = $1 + 0;
			 $Val = $2;
			 if($Val =~ m/^-([^\s]+)/)
			 {
						$objVal = $1;
			 }
			 else
			 {
						$objVal = "-".$Val;
			 }
			 $index = $indexC;
			 $len = length($numPriVar);
			 $index =~ s/\s{$len}(\s*)/$numPriVar$1/;
			 $name = $nameC;
			 $len = $len + length($varPrefix);
			 $name =~ s/\s{$len}(\s*)/$varPrefix$numPriVar$1/;
			 $at = $atC;
			 $at =~ s/\s{2}(\s*)/EQ$1/;
			 $other = $otherC;
			 $other =~ s/\s{13}(\s*)/0.0000000e+00$1/;
			 $value = $otherC;
			 $len = length($objVal);
			 $value =~ s/\s{$len}(\s*)/$objVal$1/;
			 print OUT "$index $name $at $other $other $other $value $other\n";
			 next;
	}
	if(/DUAL VARIABLES/)
	{
			 print OUT  "VARIABLES\n";
			 $dual = 1;
			 next;
	}
	if($dual == 1)
	{
			 $_ =~ m/([^\s]+)\s+([^\s]+)\s*/;
			 $numDualVar = $1 + 0;
			 $objVal = $2;
			 $index = $indexC;
			 $len = length($numDualVar);
			 $index =~ s/\s{$len}(\s*)/$numDualVar$1/;
			 $name = $nameC;
			 $len = $len + length($termPrefix);
			 $name =~ s/\s{$len}(\s*)/$termPrefix$numPriVar$1/;
			 $at = $atC;
			 $at =~ s/\s{2}(\s*)/DC$1/;
			 $other = $otherC;
			 $other =~ s/\s{13}(\s*)/0.0000000e+00$1/;
			 $upperlim = $otherC;
			 $upperlim =~ s/\s{4}(\s*)/NONE$1/;
			 $value = $otherC;
			 $len = length($objVal);
			 $value =~ s/\s{$len}(\s*)/$objVal$1/;
			 print OUT "$index $name $at $value $other $upperlim $other $other\n";
			 next;
	}
	print OUT $_;
}
if($dual == 0)
{
		 $numPriVar ++;
		 $index = $indexC;
		 $len = length($numPriVar);
		 $index =~ s/\s{$len}(\s*)/$numPriVar$1/;
		 $name = $nameC;
		 $len = $len + length($varPrefix);
		 $name =~ s/\s{$len}(\s*)/$varPrefix$numPriVar$1/;
		 $at = $atC;
		 $at =~ s/\s{2}(\s*)/EQ$1/;
		 $other = $otherC;
		 $other =~ s/\s{13}(\s*)/0.0000000e+00$1/;
		 print OUT "$index $name $at $other $other $other $other $other\n"; 
		 print OUT "\n";
		 print OUT "VARIABLES\n";
		 $index = $indexC;
		 $index =~ s/\s{5}(\s*)/INDEX$1/;
		 $name = $nameC;
		 $name =~ s/\s{4}(\s*)/NAME$1/;
		 $at = $atC;
		 $at =~ s/\s{2}(\s*)/AT$1/;
		 $activity = $otherC;
		 $activity =~ s/\s{8}(\s*)/ACTIVITY$1/;
		 $lowerlim = $otherC;
		 $lowerlim =~ s/\s{11}(\s*)/LOWER LIMIT$1/;
		 $upperlim = $otherC;
		 $upperlim =~ s/\s{11}(\s*)/UPPER LIMIT$1/;
		 $duallow = $otherC;
		 $duallow =~ s/\s{10}(\s*)/DUAL LOWER$1/;
		 $dualup = $otherC;
		 $dualup =~ s/\s{10}(\s*)/DUAL UPPER$1/;
		 print OUT "$index $name $at $activity $lowerlim $upperlim $duallow $dualup\n";
		 for($i=1;$i<=$numTer;$i++)
		 {
			 	 $index = $indexC;
			 	 $len = length($i);
			 	 $index =~ s/\s{$len}(\s*)/$i$1/;
			 	 $name = $nameC;
			 	 $len = $len + length($termPrefix);
			 	 $name =~ s/\s{$len}(\s*)/$termPrefix$i$1/;
			 	 $at = $atC;
			 	 $at =~ s/\s{2}(\s*)/DC$1/;
			 	 $other = $otherC;
			 	 $other =~ s/\s{13}(\s*)/0.0000000e+00$1/;
			 	 $upperlim = $otherC;
			 	 $upperlim =~ s/\s{4}(\s*)/NONE$1/;
			 	 $value = $otherC;
			 	 $len = length("1.000000e+00");
			 	 $value =~ s/\s{12}(\s*)/1.000000e+00$1/;
			 	 print OUT "$index $name $at $value $other $upperlim $other $other\n";
		 }
}		
close(IN);
close(OUT);




